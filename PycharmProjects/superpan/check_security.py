#!/usr/bin/env python
"""
üîê –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ SuperPan
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
"""
import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'superpan.settings')
django.setup()

from django.conf import settings

def check_security_settings():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    print("üîê –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    print("=" * 50)
    
    issues = []
    warnings = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ DEBUG —Ä–µ–∂–∏–º–∞
    if settings.DEBUG:
        issues.append("‚ùå DEBUG=True - –æ—Ç–∫–ª—é—á–∏—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!")
    else:
        print("‚úÖ DEBUG=False")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ SECRET_KEY
    if settings.SECRET_KEY == 'django-insecure-change-this-in-production':
        issues.append("‚ùå SECRET_KEY –Ω–µ –∏–∑–º–µ–Ω–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª—É—á–∞–π–Ω—ã–π –∫–ª—é—á!")
    else:
        print("‚úÖ SECRET_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ ALLOWED_HOSTS
    if '*' in settings.ALLOWED_HOSTS:
        issues.append("‚ùå ALLOWED_HOSTS —Å–æ–¥–µ—Ä–∂–∏—Ç '*' - –æ–≥—Ä–∞–Ω–∏—á—å—Ç–µ –¥–æ–º–µ–Ω—ã!")
    else:
        print("‚úÖ ALLOWED_HOSTS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ")
    
    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if not settings.SECURE_SSL_REDIRECT and not settings.DEBUG:
        warnings.append("‚ö†Ô∏è SECURE_SSL_REDIRECT=False - –≤–∫–ª—é—á–∏—Ç–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")
    else:
        print("‚úÖ SECURE_SSL_REDIRECT –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ cookie –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if not settings.SESSION_COOKIE_SECURE and not settings.DEBUG:
        warnings.append("‚ö†Ô∏è SESSION_COOKIE_SECURE=False - –≤–∫–ª—é—á–∏—Ç–µ –¥–ª—è HTTPS")
    else:
        print("‚úÖ SESSION_COOKIE_SECURE –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if not settings.CSRF_COOKIE_SECURE and not settings.DEBUG:
        warnings.append("‚ö†Ô∏è CSRF_COOKIE_SECURE=False - –≤–∫–ª—é—á–∏—Ç–µ –¥–ª—è HTTPS")
    else:
        print("‚úÖ CSRF_COOKIE_SECURE –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_headers = [
        'SECURE_BROWSER_XSS_FILTER',
        'SECURE_CONTENT_TYPE_NOSNIFF',
        'X_FRAME_OPTIONS',
    ]
    
    for header in security_headers:
        if hasattr(settings, header):
            print(f"‚úÖ {header} –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            warnings.append(f"‚ö†Ô∏è {header} –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if 'sqlite' in settings.DATABASES['default']['ENGINE'] and not settings.DEBUG:
        warnings.append("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SQLite - —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ PostgreSQL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")
    else:
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò")
    print("=" * 50)
    
    if issues:
        print("\nüö® –ö–†–ò–¢–ò–ß–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:")
        for issue in issues:
            print(f"   {issue}")
    
    if warnings:
        print("\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:")
        for warning in warnings:
            print(f"   {warning}")
    
    if not issues and not warnings:
        print("\nüéâ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ!")
    
    # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
    total_checks = len(security_headers) + 6  # 6 –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
    passed_checks = total_checks - len(issues) - len(warnings)
    score = (passed_checks / total_checks) * 100
    
    print(f"\nüìà –û—Ü–µ–Ω–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {score:.1f}%")
    
    if score >= 90:
        print("üü¢ –û—Ç–ª–∏—á–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å!")
    elif score >= 70:
        print("üü° –•–æ—Ä–æ—à–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –µ—Å—Ç—å —á—Ç–æ —É–ª—É—á—à–∏—Ç—å")
    else:
        print("üî¥ –¢—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—å–µ–∑–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é")
    
    return len(issues) == 0

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("\nüì¶ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô")
    print("=" * 30)
    
    required_packages = [
        'django',
        'django-ratelimit',
        'django-cors-headers',
        'cryptography',
        'Pillow',
        'python-decouple',
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package.replace('-', '_'))
            print(f"‚úÖ {package}")
        except ImportError:
            missing_packages.append(package)
            print(f"‚ùå {package} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    if missing_packages:
        print(f"\n‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:")
        print(f"pip install {' '.join(missing_packages)}")
        return False
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîê –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò SUPERPAN")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    deps_ok = check_dependencies()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_ok = check_security_settings()
    
    print("\n" + "=" * 50)
    if deps_ok and security_ok:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –≤–Ω–∏–º–∞–Ω–∏—è")
        return 1

if __name__ == "__main__":
    sys.exit(main())
